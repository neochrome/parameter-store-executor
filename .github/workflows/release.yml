on:
  push:
    tags:
      - 'v*.*.*'

name: Release

jobs:

  release:
    runs-on: ubuntu-latest
    container: crystallang/crystal:1.1.1-alpine-build
    steps:

      - uses: actions/checkout@v2

      - name: install shards
        run: shards install

      - name: run tests
        run: crystal spec

      - name: build
        run: shards build --static --release --no-debug

      - name: create release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./bin/pse

      - name: store artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./bin/pse

  package-docker:
    runs-on: ubuntu-latest
    needs: release
    env:
      REPO: neochrome/parameter-store-executor

    steps:

      - uses: actions/checkout@v2

      - name: restore artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./bin

      - name: build args
        id: build-args
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          if [[ $VERSION =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            TAGS="${REPO}:latest"
            TAGS="${TAGS},${REPO}:${MAJOR}"
            TAGS="${TAGS},${REPO}:${MAJOR}.${MINOR}"
            TAGS="${TAGS},${REPO}:${MAJOR}.${MINOR}.${PATCH}"
          else
            echo "Bad version detected: ${VERSION}"
            exit 1
          fi
          echo "::set-output name=version::${VERSION}"
          echo "::set-output name=tags::${TAGS}"
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          file: ./Dockerfile.release
          push: true
          tags: ${{ steps.build-args.outputs.tags }}
          labels: |
            version=${{ steps.build-args.outputs.version }}
            org.opencontainers.image.version=${{ steps.build-args.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
